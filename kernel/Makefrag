# -*- makefile-gmake -*-

OBJS = \
	numa.o \
	bio.o \
	cmdline.o \
	condvar.o \
	console.o \
	kcpprt.o \
	e1000.o \
	ahci.o \
	exec.o \
	fdt.o \
	file.o \
	fmt.o \
	fs.o \
        futex.o \
        idle.o \
	hwvm.o \
	hz.o \
	kalloc.o \
	kmalloc.o \
	kbd.o \
	main.o \
	memide.o \
	ide.o \
	mp.o \
	net.o \
	pipe.o \
	proc.o \
	gc.o \
	refcache.o \
	rnd.o \
	sampler.o \
	sched.o \
	spinlock.o \
	swtch.o \
	string.o \
	syscall.o \
	sysfile.o \
	sysproc.o \
	syssocket.o\
        user.o \
	vm.o \
	trap.o \
        uaccess.o \
	trapasm.o \
        zalloc.o \
	incbin.o \
	sysvectors.o \
	pstream.o \
	semaphore.o \
	version.o \
	buddy.o \
	ipi.o \
	kconfig.o \
	dev.o \
	codex.o \
	benchcodex.o \
	rtc.o \
	timemath.o \
	mnode.o \
	mfs.o \
	mfsload.o \
	ctype.o \
	unixsock.o \
	heapprof.o \
	eager_refcache.o \
	disk.o \

OBJS := $(addprefix $(O)/kernel/, $(OBJS))

OBJS += $(CXXRUNTIME)

KERN = $(O)/kernel.elf
ALL += $(KERN)

$(O)/kernel/%.o: CFLAGS+=-mcmodel=medany -DXV6_KERNEL
$(O)/kernel/%.o: CXXFLAGS+=-mcmodel=medany -DXV6_KERNEL

$(KERN): $(O)/kernel/boot.o $(OBJS) $(LDEPS) kernel/kernel.ld
	@echo "  LD     $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(LD) $(LDFLAGS) -T kernel/kernel.ld -z max-page-size=4096 -e start \
		-o $@ $(O)/kernel/boot.o $(OBJS) -L$(O) $(LFLAGS)
	$(Q)tools/check-stack $@

$(O)/kernel/%.o: lib/%.cc $(O)/sysroot
	@echo "  CXX    $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(CXX) $(CXXFLAGS) -c -o $@ $<

$(O)/kernel/%.o: lib/%.c $(O)/sysroot
	@echo "  CC     $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(CC) $(CFLAGS) -c -o $@ $<

$(O)/kernel/%.o: libutil/%.cc $(O)/sysroot
	@echo "  CXX    $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(CXX) $(CXXFLAGS) -c -o $@ $<

$(O)/kernel/%.o: $(O)/kernel/%.cc $(O)/sysroot
	@echo "  CXX    $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(CXX) $(CXXFLAGS) -c -o $@ $<

$(O)/kernel/incbin.o: ASFLAGS+=-DMAKE_OUT=$(O)
$(O)/kernel/incbin.o: $(O)/kernel/initcode $(O)/fs.img

# link initcode against sysstubs to get syscall numbers
$(O)/kernel/initcode: TTEXT = 0x1000
$(O)/kernel/initcode: LDEXTRA = $(O)/lib/sysstubs.o
$(O)/kernel/initcode: $(O)/lib/sysstubs.o

$(O)/kernel/%: kernel/%.S $(O)/sysroot
	@echo "  CC     $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(CC) $(CFLAGS) -nostdinc -I. -c $< -o $@.o
	$(Q)$(LD) $(LDFLAGS) -N -e start -Ttext $(TTEXT) -o $@.out $@.o $(LDEXTRA)
	$(Q)$(OBJCOPY) -S -O binary $@.out $@

$(O)/kernel/asmdefines.S: kernel/asmdefines.cc $(O)/sysroot
	@echo "  CXX    $@"
	$(Q)mkdir -p $(@D)
	$(Q)$(CXX) -S $(CXXFLAGS) -o $@ $<

$(O)/include/asmdefines.h: $(O)/kernel/asmdefines.S
	@echo "  GEN    $@"
	$(Q)mkdir -p $(@D)
	$(Q)sed -n 's/ magicmagicmagic/ /p' $(O)/kernel/asmdefines.S > $@
$(O)/kernel/trapasm.o: $(O)/include/asmdefines.h
$(O)/kernel/uaccess.o: $(O)/include/asmdefines.h

$(O)/kernel/sysvectors.cc: tools/syscalls.py kernel/*.cc
	$(call SYSCALLGEN,--kvectors)

$(O)/kernel/version.cc: always
	@echo "  GEN    $@"
	$(Q)mkdir -p $(@D)
	$(Q)echo "const char *xv6_version_string = \"$$(date)\";" > $@.tmp
	$(Q) 	REL="$$(git describe --long --dirty=+)"; \
		echo "const char *xv6_release_string = \"$$REL\";" >> $@.tmp
	$(Q)cmp -s $@.tmp $@ || mv $@.tmp $@

$(O)/kernel/kconfig.cc: always
	@echo "  GEN    $@"
	$(Q)mkdir -p $(@D)
	$(Q)( \
	echo "#define STR_1(x...) #x"; \
	echo "#define STR(x...)   STR_1(x)"; \
	echo "const char *kconfig ="; \
	echo | $(CC) $(filter-out -MD -MP,$(CFLAGS)) -E -dN - -o - | \
		awk '/^# /{P=0} P{print $$2} /^# 1.*param.h/{P=1}' | \
		awk '!/^$$/{print "\"" $$1 "=\" STR(" $$1 ") \"\\n\""}'; \
	echo ";" \
	) > $@.tmp
	$(Q)cmp -s $@.tmp $@ || mv $@.tmp $@

.PHONY: always

.PRECIOUS: $(O)/kernel/%.o
-include $(O)/kernel/*.d

# vim: set noexpandtab:
